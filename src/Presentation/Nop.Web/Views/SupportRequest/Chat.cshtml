@model SupportChatViewModel
@{
    Layout = "_ColumnsTwo";

    //title
    NopHtml.AddTitleParts("Support Request Chat");
    //page class
    // NopHtml.AppendPageCssClassParts("html-account-page");
    // NopHtml.AppendPageCssClassParts("html-customer-info-page");
}

@section left
{
    @await Component.InvokeAsync(typeof(CustomerNavigationViewComponent), new { selectedTabId = CustomerNavigationEnum.SupportRequests })
}

<div class="page account-page customer-info-page">
    <div class="page-title">
        <h1>Support Request - Chat</h1>
    </div>
    <div class="page-body">
        <div id="support-chat-page">
            <section class="row">
                <div class="column">

                    <a asp-action="List" class="btn btn-secondary">Back</a>

                    <ol class="chat-info-list">
                        <li class="heading">Request No.</li>
                        <li class="info">@Model.RequestId</li>
                        <li class="heading">Subject</li>
                        <li class="info">@Model.Subject</li>
                        <li class="heading">Status</li>
                        <li class="info">@Model.Status</li>
                    </ol>
                    <div class="form-group">
                        <textarea asp-for="NewMessage" id="new-message" class="form-control" placeholder="Type your message here..."></textarea>
                        <span asp-validation-for="NewMessage" class="text-danger"></span>
                    </div>
                    <div class="action-btn-cntr">
                        <button class="btn btn-primary" id="new-message-btn">Send</button>
                    </div>
                </div>
                @Html.Partial("_UserChatHistoryTable", Model)
            </section>
        </div>
    </div>
</div>

<script>

    function SendChatMessage() {
        $.ajax({
            url: '@Url.Action("Chat")',
            type: 'POST',
            data: {
                requestId : @Model.RequestId,
                newMessage : $('#new-message').val()
            },
            success: function (response) {
                $('.text-danger').text('').removeClass('field-validation-error').addClass('field-validation-valid');
                if (response.success) {
                    updateChatTable()
                } else {
                    $.each(response.errors, function (key, messages) {
                        const field = $(`[data-valmsg-for="${key}"]`);
                        field.text(messages.join(', '))
                            .removeClass('field-validation-valid')
                            .addClass('field-validation-error');
                    });
                }
            },
            error: function (err) {
                alert('An error occured while adding the message. Please try again.');
                console.log(err);
            }
        });
    }
    
    $(document).ready(function () {
        $('#new-message-btn').on('click', function () {
            SendChatMessage();
        });
    });


</script>
